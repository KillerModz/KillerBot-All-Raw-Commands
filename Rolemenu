{
  "name": "rolemenu",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "DtBMG",
  "actions": [
    {
      "member": "1",
      "varName": "",
      "permission": "MANAGE_ROLES",
      "iftrue": "0",
      "iftrueVal": "",
      "iffalse": "1",
      "iffalseVal": "",
      "name": "Check Member Permissions"
    },
    {
      "behavior": "1",
      "interpretation": "1",
      "code": "const Discord = require(\"discord.js\")\nlet reactionArray = [];\nlet rectarray = globalVars('reactionRoleInf');\nconst _this = this;\nlet emojiArray = [];\nlet roleArray = [];\nlet errorCatch = 5;\nlet localEmoji;\nlet localEmojiG;\nlet emojiTimerRe = 0;\nvar interval;\nlet regex = /[^\\u0000-\\u00ff]/;\nconst fs = require('fs');\n\nfunction specCheck(str) {\n    if (!str.length) return false;\n    if (str.charCodeAt(0) > 255) return true;\n    return regex.test(str);\n}\n\nlet format;\n\nlet embedTemplate = new Discord.RichEmbed( {\n    color: 0x00FF00,\n    author: {\n      name: client.user.username,\n      icon_url: client.user.avatarURL\n    },\n    title: \"Role Reaction Prompt\",\n    description: \"This is a test embed to showcase what they look like and what they can do.\",\n    timestamp: new Date(),\n})\n\n// Settings\nlet grabAllEmoji = false; // Set true if you want the bot to use global emojis from all the servers its in. (May cause slowdowns in larger servers)\nlet roleLimit = 10; // Default: 10 || Sets the maximum number of roles attached to emojis.\n//\n\nif (grabAllEmoji) {\n    localEmoji = (client || this.getDBM().Bot.bot).emojis.array();\n    localEmojiG = \"Please make sure the emoji you selected is in one of the servers that the bot is in!\";\n} else {\n    localEmoji = msg.guild.emojis.array();\n    localEmojiG = \"Please make sure the emoji you selected is in this server!\";\n}\nembedTemplate[\"description\"] = `Welcome to the autorole promt.\\n\\nPlease now respond with a format for your reaction roles!\\nFor ex. {emoji} => {role}\\n\\nUse {emoji} where the emoji will be placed and {role} where the role attached to that emoji will be placed.\\n(One of {emoji} and one of {role} is required in the format)`\nmsg.channel.send(embedTemplate)\n    .then((message) => {\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(async function(collected) {\n                msg.author.lastMessage.delete();\n                if (collected.first().content.includes(\"{emoji}\") && collected.first().content.includes(\"{role}\")) {\n                    let msgFormat = collected.first().content;\n                    embedTemplate[\"description\"] = `Your format will appear like this: \\n${msgFormat.replace(\"{emoji}\",\"ðŸ˜ƒ\").replace(\"{role}\",\"Example Role\")}\\n\\nIf you are sure with this format, respond with \"confirm\"\\nIf not, please respond with \"cancel\"`;\n                    message.edit(embedTemplate);\n                    msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                        max: 1,\n                        time: 60000,\n                        errors: ['time'],\n                    })\n                    .then(async function(collected) {\n                        msg.author.lastMessage.delete();\n                        if (collected.first().content.toLowerCase() == \"confirm\") {\n                            format = msgFormat;\n                            reAsk(message, \" \");\n                        } else {\n                            message.delete();\n                            errorMessage('Prompt cancelled, please re-execute the command to go through the prompt again!');\n                        }\n                    })\n                } else {\n                    message.delete();\n                    errorMessage('Prompt cancelled, you didnt provide a valid format with both required variables!');\n                }\n                \n            }).catch((error) => {\n                console.log(error);\n                message.delete();\n                errorMessage('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n            });\n    })\n\nfunction reAsk(message, extra) {\n    if (extra == null) {\n        extra = \"\";\n    }\n    if (reactionArray.length != roleLimit) {\n        var finalText = \"\";\n        reactionArray.forEach(subarray => {\n            finalText = finalText + format.replace(\"{emoji}\", subarray[0]).replace(\"{role}\",subarray[2]) + \"\\n\"\n        })\n        embedTemplate[\"description\"] = `Please now enter the emoji-role reaction connections (Max ${roleLimit})\\n ${finalText}\\n\\nIf you would like to attach another reaction to a role, please insert a role along with an emoji.\\nEx. ExampleRole ðŸ˜ƒ\\nIf not, please reply with \"done\".\\nIf you would like to cancel the prompt, please respond with \"cancel\"\\n${extra}`\n        message.edit(embedTemplate);\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(async function(collected) {\n                msg.author.lastMessage.delete();\n                if (collected.first().content.toLowerCase() == \"done\") {\n                    if (reactionArray.length > 0) {\n                        done(message);\n                    } else {\n                        if (errorCatch > 0) {\n                            errorCatch -= 1;\n                            reAsk(message, `Please atleast attach 1 emoji to 1 role!\\nTries left - ${errorCatch}`)\n                        } else {\n                            message.delete();\n                            errorMessage(\"Prompt has been cancelled, you used the same emoji twice for differnt roles!\\nPlease re-execute the command to go through the prompt again!\");\n                        }\n                    }\n                } else if (collected.first().content.toLowerCase() == \"cancel\") {\n                    message.delete();\n                    errorMessage(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\");\n                } else {\n                    if (collected.first().content.split(/ +/g).length > 1) {\n                        const tstValidRole = await msg.guild.roles.find(role => role.name === collected.first().content.split(/ +/g)[0]);\n                        if (collected.first().mentions.roles.first() || tstValidRole != null) {\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\n                            if (collected.first().mentions.roles.first() != null) {\n                                roleMentioned = collected.first().mentions.roles.first();\n                            } else {\n                                roleMentioned = tstValidRole;\n                            }\n                            if (unicodeStored != null) {\n                                if (!emojiArray.includes(unicodeStored)) {\n                                    if (!roleArray.includes(roleMentioned.id)) {\n                                        if (specCheck(unicodeStored) || unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                            var emoji;\n                                            if (unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                                unicodeStored = unicodeStored.replace(/\\D/g, '');\n                                                emoji = localEmoji.filter(emojiT => emojiT.id == unicodeStored);\n                                                if (emoji.length > 0) {\n                                                    unicodeStored = emoji[0];\n                                                    delete unicodeStored['guild']\n                                                    reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                                    emojiArray.push(unicodeStored);\n                                                    roleArray.push(roleMentioned.id);\n                                                    reAsk(message);\n                                                } else {\n                                                    if (errorCatch > 0) {\n                                                        errorCatch -= 1;\n                                                        reAsk(message, `Please provide a valid custom emoji!\\n${localEmojiG}\\nTries left - ${errorCatch}`);\n                                                    } else {\n                                                        message.delete();\n                                                        errorMessage(`Prompt has been cancelled, you provided an invalid custom emoji!\\n${localEmojiG}\\nPlease re-execute the command to go through the prompt again!`);\n                                                    }\n                                                }\n                                            } else {\n                                                reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                                emojiArray.push(unicodeStored);\n                                                roleArray.push(roleMentioned.id);\n                                                reAsk(message);\n                                            }\n\n                                        } else {\n                                            if (errorCatch > 0) {\n                                                errorCatch -= 1;\n                                                reAsk(message, `Please don't use the same emoji twice!\\nTries left - ${errorCatch}`)\n                                            } else {\n                                                message.delete();\n                                                errorMessage(\"Prompt has been cancelled, you used the same emoji twice for differnt roles!\\nPlease re-execute the command to go through the prompt again!\");\n                                            }\n                                        }\n                                    } else {\n                                        if (errorCatch > 0) {\n                                            errorCatch -= 1;\n                                            reAsk(message, `Please don't use the same role twice!\\nTries left - ${errorCatch}`)\n                                        } else {\n                                            message.delete();\n                                            errorMessage(\"Prompt has been cancelled, you used the same role twice in the prompt!\\nPlease re-execute the command to go through the prompt again!\");\n                                        }\n                                    }\n                                } else {\n                                    if (errorCatch > 0) {\n                                        errorCatch -= 1;\n                                        reAsk(message, `Please provide a valid emoji!\\nTries left - ${errorCatch}`)\n                                    } else {\n                                        message.delete();\n                                        errorMessage(\"Prompt has been cancelled, you didn't provide a valid emoji!\\nPlease re-execute the command to go through the prompt again!\");\n                                    }\n                                }\n                            }\n                        } else {\n                            if (errorCatch > 0) {\n                                errorCatch -= 1;\n                                reAsk(message, `Please mention a valid role!\\nTries left - ${errorCatch}`)\n                            } else {\n                                message.delete();\n                                errorMessage(\"Prompt has been cancelled, you didn't mention a valid role!\\nPlease re-execute the command to go through the prompt again!\");\n                            }\n                        }\n                    } else {\n                        if (errorCatch > 0) {\n                            errorCatch -= 1;\n                            reAsk(message, `Please provide a valid emoji/role!\\nTries left - ${errorCatch}`)\n                        } else {\n                            message.delete();\n                            errorMessage(\"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\nPlease re-execute the command to go through the prompt again!\");\n                        }\n                    }\n                }\n            }).catch(() => {\n                message.delete();\n                errorMessage('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n            });\n    } else {\n        done(message);\n    }\n\n}\n\nfunction done(message) {\n    var finalText = \"\";\n    reactionArray.forEach(subarray => {\n        finalText = finalText + format.replace(\"{emoji}\", subarray[0]).replace(\"{role}\",subarray[2]) + \"\\n\"\n    })\n    embedTemplate[\"description\"] = `Final conformation menu\\n\\nBelow is the list of reactions to their roles\\n${finalText}\\n\\nIf this is correct, please respond with a mention to a text channel where the role menu will be sent.\\nIf this isn't correct, respond with \"cancel\" to cancel the prompt.`;\n    message.edit(embedTemplate);\n    msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n            max: 1,\n            time: 60000,\n            errors: ['time'],\n        })\n        .then((collected) => {\n            msg.author.lastMessage.delete();\n            if (collected.first().mentions.channels.first()) {\n                var menchannel = collected.first().mentions.channels.first()\n                message.delete();\n                menchannel.send({\n                        embed: {\n                            color: 0xffff00,\n                            title: \"Role Reaction Menu\",\n                            description: `React with the reaction listed to get the listed role for that reaction.\\n${finalText}`,\n                            timestamp: new Date()\n                        }\n                    })\n                    .then(embedmessage => {\n                        interval = setInterval(function() { emojiTimerInt(embedmessage, reactionArray); }, 500)\n                        rectarray[embedmessage.id] = reactionArray\n                        _this.storeValue(rectarray, 3, \"reactionRoleInf\", cache);\n                        fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                            if(err) {\n                                return console.log(err);\n                            }\n                        });\n                    })\n            } else if (collected.first().content == \"cancel\") {\n                message.delete();\n                errorMessage(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\");\n            } else {\n                message.delete();\n                errorMessage(\"Prompt has been cancelled, you didn't provide a valid response!\\nPlease re-execute the command to go through the prompt again!\");\n            }\n        }).catch(() => {\n            message.delete();\n            errorMessage('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!')\n        });\n}\n\nfunction emojiTimerInt(message, subarray) {\n    message.react(subarray[emojiTimerRe][0])\n    emojiTimerRe += 1;\n\n    if (emojiTimerRe == subarray.length) {\n        clearInterval(interval);\n    }\n}\n\nfunction errorMessage(error) {\n    let errorTemplate = new Discord.RichEmbed( {\n        color: 0xFF0000,\n        author: {\n          name: client.user.username,\n          icon_url: client.user.avatarURL\n        },\n        title: \"Role Reaction Prompt\",\n        description: error,\n        timestamp: new Date(),\n    })\n\n    msg.channel.send(errorTemplate);\n}",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ],
  "comType": "0"
}
